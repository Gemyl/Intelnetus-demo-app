// Importing custom color theme
@import 'theme-colors';

/* Importing Bootstrap SCSS file. */
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/utilities";
@import '~bootstrap/dist/css/bootstrap.min.css';

// Importing Font Awesome Icons
//@import '~font-awesome/css/font-awesome.min.css';

// Importing PrimeNg modules
@import "primeng/resources/themes/lara-light-blue/theme.css";
@import "primeng/resources/primeng.css";

$new-colors: (
  "smoke-white": $smokeWhite,
  "light-gray": $lightGray
);

$new-spacers: (
  6: 5rem,
);

$new-widths: (
  85: 85%,
);

$new-heights: (
  15: 15%,
  60: 60%,
);

$new-max-heights: (
  90: 90%,
);

$new-viewport-heights: (
  70: 70vh,
);

$utilities: map-merge(
  $utilities,
  (
    "viewport-height": map-merge(
      map-get($utilities, "viewport-height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "viewport-height"), "values"),
          ($new-viewport-heights),
        ),
      ),
    ),
    "height": map-merge(
      map-get($utilities, "height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "height"), "values"),
          ($new-heights),
        ),
      ),
    ),
    "width": map-merge(
      map-get($utilities, "width"),
      (
        values: map-merge(
          map-get(map-get($utilities, "width"), "values"),
          ($new-widths),
        ),
      ),
    ),
    "max-height": map-merge(
      map-get($utilities, "max-height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "max-height"), "values"),
          ($new-max-heights),
        ),
      ),
    ),
    "margin-top": map-merge(
      map-get($utilities, "margin-top"),
      (
        values: map-merge(
          map-get(map-get($utilities, "margin-top"), "values"),
          ($new-spacers),
        ),
      ),
    ),
    "border-color": map-merge(
      map-get($utilities, "border-color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "border-color"), "values"),
          ($new-colors),
        ),
      ),
    ),
    "background-color": map-merge(
      map-get($utilities, "background-color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "background-color"), "values"),
          ($new-colors),
        ),
      ),
    )
  )
);


@import 'bootstrap/scss/bootstrap';

span {
    white-space: nowrap;
}

tr {
    border-style: solid;
    border-color: $lightGray;
    border-width: 0 0 1px 0;
}

.btn {
  color: white !important;
}

.btn-light {
  color: black !important;
}

.intel-label {
    color: black;
    font-size: 22px;
    font-weight: light;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.text-input {
    outline: none;
    padding: 1.2rem .5rem 1.2rem .5rem;
    height: 35px;
    border-style: solid;
    border-width: 1px;
    border-color: $lightGray;
    border-radius: 10px;
}

.text-input:focus, .intel-slct:focus {
    box-shadow: 
        0 0 4px $primary, 
        0 0 4px $primary;
}

.intel-slct {
    padding: .25rem;
    border-radius: 10px;
    background-color: white;
    outline: none;
    border-style: solid;
}

.close-modal-btn {
    height: 30px;
    width: 30px;
    border-radius: 50%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.intel-options {
    padding: 3px; 
    width: 30%; 
    outline: none; 
    border-style: solid;
    border-color: $lightGray;
}

/* width */
::-webkit-scrollbar {
  width: 15px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px $lightGray; 
  border-radius: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: $smokeWhite; 
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: black; 
}